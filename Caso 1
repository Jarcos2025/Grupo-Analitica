# Desarrollo
setwd("/Users/jumar/OneDrive/Documentos/Javeriana/5 Quinto semestre/Analitica de datos")
getwd()
# Cargar las librerías necesarias
library(dplyr)
library(ggplot2)

# Cargar las librerías necesarias
library(dplyr)
library(tidyverse)
library(ggplot2)

# --- 1. Cargar y preparar los datos de Weekly Visits ---
# El archivo 'Web_Analytics.xls - Weekly Visits.csv' tiene 5 líneas de encabezado antes de los datos reales.
weekly_visits_data <- read.csv("Web_Analytics.xls - Weekly Visits.csv", skip = 5, header = TRUE) %>%
  # Renombrar la primera columna para mayor claridad y consistencia
  rename(Week = Week..2008.2009.) %>%
  # Convertir el número de la semana a formato de fecha
  # Los números de Excel representan días desde el 1899-12-30
  mutate(Date = as.Date(Week, origin = "1899-12-30")) %>%
  # Seleccionar las columnas relevantes y asegurarse de que los tipos de datos sean correctos
  select(Date, Visits, Unique.Visits, Pageviews, Pages.Visit, Avg..Time.on.Site..secs., Bounce.Rate, X..New.Visits)

# --- 2. Cargar y preparar los datos de Financials ---
# El archivo 'Web_Analytics.xls - Financials.csv' tiene 4 líneas de encabezado antes de los datos reales.
financials_data <- read.csv("Web_Analytics.xls - Financials.csv", skip = 4, header = TRUE) %>%
  # Renombrar la primera columna para mayor claridad y consistencia
  rename(Week = Week..2008.2009.) %>%
  # Convertir el número de la semana a formato de fecha
  mutate(Date = as.Date(Week, origin = "1899-12-30")) %>%
  # Seleccionar las columnas relevantes y asegurarse de que los tipos de datos sean correctos
  select(Date, Revenue, Profit, Lbs..Sold, Inquiries)

# --- 3. Crear los gráficos de columnas ---

# Gráfico 1: Visitas Únicas a lo largo del tiempo
plot_unique_visits <- ggplot(weekly_visits_data, aes(x = Date, y = Unique.Visits)) +
  geom_col(fill = "steelblue", color = "black", width = 5) + # geom_col para gráficos de columna
  labs(
    title = "Visitas Únicas al Sitio Web de QA a lo largo del Tiempo",
    x = "Fecha",
    y = "Visitas Únicas"
  ) +
  theme_minimal() + # Un tema simple para mejor visualización
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) # Centrar y poner en negrita el título

print(plot_unique_visits)

# Gráfico 2: Ingresos a lo largo del tiempo
plot_revenue <- ggplot(financials_data, aes(x = Date, y = Revenue)) +
  geom_col(fill = "darkgreen", color = "black", width = 5) +
  labs(
    title = "Ingresos a lo largo del Tiempo",
    x = "Fecha",
    y = "Ingresos"
  ) +
  scale_y_continuous(labels = scales::dollar) + # Formatear el eje Y como moneda
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

print(plot_revenue)

# Gráfico 3: Ganancias a lo largo del tiempo
plot_profit <- ggplot(financials_data, aes(x = Date, y = Profit)) +
  geom_col(fill = "purple", color = "black", width = 5) +
  labs(
    title = "Ganancias a lo largo del Tiempo",
    x = "Fecha",
    y = "Ganancias"
  ) +
  scale_y_continuous(labels = scales::dollar) + # Formatear el eje Y como moneda
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

print(plot_profit)

# Gráfico 4: Libras Vendidas a lo largo del tiempo
plot_lbs_sold <- ggplot(financials_data, aes(x = Date, y = Lbs..Sold)) +
  geom_col(fill = "orange", color = "black", width = 5) +
  labs(
    title = "Libras Vendidas a lo largo del Tiempo",
    x = "Fecha",
    y = "Libras Vendidas"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

print(plot_lbs_sold)
